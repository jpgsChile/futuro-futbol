/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */
import {
  Contract,
  ContractFactory,
  ContractTransactionResponse,
  Interface,
} from "ethers";
import type {
  Signer,
  AddressLike,
  ContractDeployTransaction,
  ContractRunner,
} from "ethers";
import type { NonPayableOverrides } from "../../../common";
import type {
  FFEvent,
  FFEventInterface,
} from "../../../contracts/ff-event.sol/FFEvent";

const _abi = [
  {
    inputs: [
      {
        internalType: "address",
        name: "rolesAddress",
        type: "address",
      },
    ],
    stateMutability: "nonpayable",
    type: "constructor",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "uint256",
        name: "id",
        type: "uint256",
      },
      {
        indexed: true,
        internalType: "uint256",
        name: "gameId",
        type: "uint256",
      },
      {
        indexed: true,
        internalType: "uint256",
        name: "playerId",
        type: "uint256",
      },
      {
        indexed: false,
        internalType: "enum FFEvent.EventType",
        name: "eventType",
        type: "uint8",
      },
      {
        indexed: false,
        internalType: "string",
        name: "dataCid",
        type: "string",
      },
    ],
    name: "EventRegistered",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "uint256",
        name: "playerId",
        type: "uint256",
      },
      {
        indexed: false,
        internalType: "int256",
        name: "newScore",
        type: "int256",
      },
    ],
    name: "ReputationUpdated",
    type: "event",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    name: "eventsById",
    outputs: [
      {
        internalType: "uint256",
        name: "id",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "gameId",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "clubId",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "playerId",
        type: "uint256",
      },
      {
        internalType: "enum FFEvent.EventType",
        name: "eventType",
        type: "uint8",
      },
      {
        internalType: "string",
        name: "dataCid",
        type: "string",
      },
      {
        internalType: "uint64",
        name: "timestamp",
        type: "uint64",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    name: "gameToEventIds",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "gameId",
        type: "uint256",
      },
    ],
    name: "getGameEvents",
    outputs: [
      {
        components: [
          {
            internalType: "uint256",
            name: "id",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "gameId",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "clubId",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "playerId",
            type: "uint256",
          },
          {
            internalType: "enum FFEvent.EventType",
            name: "eventType",
            type: "uint8",
          },
          {
            internalType: "string",
            name: "dataCid",
            type: "string",
          },
          {
            internalType: "uint64",
            name: "timestamp",
            type: "uint64",
          },
        ],
        internalType: "struct FFEvent.GameEvent[]",
        name: "list",
        type: "tuple[]",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "nextEventId",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    name: "playerReputation",
    outputs: [
      {
        internalType: "int256",
        name: "",
        type: "int256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "gameId",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "clubId",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "playerId",
        type: "uint256",
      },
      {
        internalType: "enum FFEvent.EventType",
        name: "eventType",
        type: "uint8",
      },
    ],
    name: "registerEvent",
    outputs: [
      {
        internalType: "uint256",
        name: "id",
        type: "uint256",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "gameId",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "clubId",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "playerId",
        type: "uint256",
      },
      {
        internalType: "enum FFEvent.EventType",
        name: "eventType",
        type: "uint8",
      },
      {
        internalType: "int256",
        name: "reputationDelta",
        type: "int256",
      },
      {
        internalType: "string",
        name: "dataCid",
        type: "string",
      },
    ],
    name: "registerEventAndReputation",
    outputs: [
      {
        internalType: "uint256",
        name: "id",
        type: "uint256",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "gameId",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "clubId",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "playerId",
        type: "uint256",
      },
      {
        internalType: "enum FFEvent.EventType",
        name: "eventType",
        type: "uint8",
      },
      {
        internalType: "string",
        name: "dataCid",
        type: "string",
      },
    ],
    name: "registerEventFF",
    outputs: [
      {
        internalType: "uint256",
        name: "id",
        type: "uint256",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "roles",
    outputs: [
      {
        internalType: "contract FFRoles",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
] as const;

const _bytecode =
  "0x608060405234801561001057600080fd5b5060405161136838038061136883398101604081905261002f91610054565b600080546001600160a01b0319166001600160a01b0392909216919091179055610084565b60006020828403121561006657600080fd5b81516001600160a01b038116811461007d57600080fd5b9392505050565b6112d5806100936000396000f3fe608060405234801561001057600080fd5b50600436106100935760003560e01c80635736771d116100665780635736771d1461010f5780636d7524ee146101225780639f9d903a14610148578063c9e089b414610151578063cf50c9141461017157600080fd5b8063108531d6146100985780631f28c05a146100be578063392f5f64146100d15780634df6c018146100fc575b600080fd5b6100ab6100a6366004610cde565b610191565b6040519081526020015b60405180910390f35b6100ab6100cc366004610d5c565b6101c2565b6000546100e4906001600160a01b031681565b6040516001600160a01b0390911681526020016100b5565b6100ab61010a366004610dcc565b61056d565b6100ab61011d366004610e0b565b6108f3565b610135610130366004610e85565b610992565b6040516100b59796959493929190610f1c565b6100ab60015481565b61016461015f366004610e85565b610a66565b6040516100b59190610f71565b6100ab61017f366004610e85565b60046020526000908152604090205481565b600360205281600052604060002081815481106101ad57600080fd5b90600052602060002001600091509150505481565b6000805460408051632bdd2f0560e21b815290516001600160a01b03909216916391d1485491839163af74bc14916004808201926020929091908290030181865afa158015610215573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906102399190611032565b6040516001600160e01b031960e084901b1681526004810191909152336024820152604401602060405180830381865afa15801561027b573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061029f919061104b565b8061038157506000546040805163a217fddf60e01b815290516001600160a01b03909216916391d1485491839163a217fddf916004808201926020929091908290030181865afa1580156102f7573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061031b9190611032565b6040516001600160e01b031960e084901b1681526004810191909152336024820152604401602060405180830381865afa15801561035d573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610381919061104b565b6103c35760405162461bcd60e51b815260206004820152600e60248201526d139bdd08185d5d1a1bdc9a5e995960921b60448201526064015b60405180910390fd5b6001600081546103d29061108a565b919050819055905060006040518060e0016040528083815260200189815260200188815260200187815260200186600881111561041157610411610e9e565b815260200185858080601f01602080910402602001604051908101604052809392919081815260200183838082843760009201829052509385525050506001600160401b03421660209283015284815260028083526040918290208451815592840151600180850191909155918401519083015560608301516003830155608083015160048301805494955085949192909160ff1916908360088111156104ba576104ba610e9e565b021790555060a082015160058201906104d39082611144565b5060c091909101516006909101805467ffffffffffffffff19166001600160401b03909216919091179055600088815260036020908152604080832080546001810182559084529190922001839055518690899084907fc2cce9ea8db651b24ed374a114812fa2df6be4acefa970cf14e394734340f2a09061055a908a908a908a90611203565b60405180910390a4509695505050505050565b6000805460408051632bdd2f0560e21b815290516001600160a01b03909216916391d1485491839163af74bc14916004808201926020929091908290030181865afa1580156105c0573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906105e49190611032565b6040516001600160e01b031960e084901b1681526004810191909152336024820152604401602060405180830381865afa158015610626573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061064a919061104b565b8061072c57506000546040805163a217fddf60e01b815290516001600160a01b03909216916391d1485491839163a217fddf916004808201926020929091908290030181865afa1580156106a2573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906106c69190611032565b6040516001600160e01b031960e084901b1681526004810191909152336024820152604401602060405180830381865afa158015610708573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061072c919061104b565b6107695760405162461bcd60e51b815260206004820152600e60248201526d139bdd08185d5d1a1bdc9a5e995960921b60448201526064016103ba565b6001600081546107789061108a565b919050819055905060006040518060e001604052808381526020018781526020018681526020018581526020018460088111156107b7576107b7610e9e565b8152602001604051806020016040528060008152508152602001426001600160401b0316815250905080600260008481526020019081526020016000206000820151816000015560208201518160010155604082015181600201556060820151816003015560808201518160040160006101000a81548160ff0219169083600881111561084657610846610e9e565b021790555060a0820151600582019061085f9082611144565b5060c091909101516006909101805467ffffffffffffffff19166001600160401b03909216919091179055600086815260036020908152604080832080546001810182559084529190922001839055518490879084907fc2cce9ea8db651b24ed374a114812fa2df6be4acefa970cf14e394734340f2a0906108e2908890611240565b60405180910390a450949350505050565b60006109038888888887876101c2565b9050851580159061091357508315155b156109875760008681526004602052604081208054869290610936908490611261565b90915550506000868152600460205260409081902054905187917ffee87f59c9a5b153b291b06480e98dc781913dac115bcf726fd443103d1d331d9161097e91815260200190565b60405180910390a25b979650505050505050565b60026020819052600091825260409091208054600182015492820154600383015460048401546005850180549496959394929360ff909216926109d4906110b9565b80601f0160208091040260200160405190810160405280929190818152602001828054610a00906110b9565b8015610a4d5780601f10610a2257610100808354040283529160200191610a4d565b820191906000526020600020905b815481529060010190602001808311610a3057829003601f168201915b505050600690930154919250506001600160401b031687565b6000818152600360209081526040808320805482518185028101850190935280835260609493830182828015610abb57602002820191906000526020600020905b815481526020019060010190808311610aa7575b5050505050905080516001600160401b03811115610adb57610adb6110a3565b604051908082528060200260200182016040528015610b1457816020015b610b01610c90565b815260200190600190039081610af95790505b50915060005b8151811015610c895760026000838381518110610b3957610b39611289565b602002602001015181526020019081526020016000206040518060e0016040529081600082015481526020016001820154815260200160028201548152602001600382015481526020016004820160009054906101000a900460ff166008811115610ba657610ba6610e9e565b6008811115610bb757610bb7610e9e565b8152602001600582018054610bcb906110b9565b80601f0160208091040260200160405190810160405280929190818152602001828054610bf7906110b9565b8015610c445780601f10610c1957610100808354040283529160200191610c44565b820191906000526020600020905b815481529060010190602001808311610c2757829003601f168201915b5050509183525050600691909101546001600160401b03166020909101528351849083908110610c7657610c76611289565b6020908102919091010152600101610b1a565b5050919050565b6040518060e001604052806000815260200160008152602001600081526020016000815260200160006008811115610cca57610cca610e9e565b815260606020820152600060409091015290565b60008060408385031215610cf157600080fd5b50508035926020909101359150565b803560098110610d0f57600080fd5b919050565b60008083601f840112610d2657600080fd5b5081356001600160401b03811115610d3d57600080fd5b602083019150836020828501011115610d5557600080fd5b9250929050565b60008060008060008060a08789031215610d7557600080fd5b863595506020870135945060408701359350610d9360608801610d00565b925060808701356001600160401b03811115610dae57600080fd5b610dba89828a01610d14565b979a9699509497509295939492505050565b60008060008060808587031215610de257600080fd5b843593506020850135925060408501359150610e0060608601610d00565b905092959194509250565b600080600080600080600060c0888a031215610e2657600080fd5b873596506020880135955060408801359450610e4460608901610d00565b93506080880135925060a08801356001600160401b03811115610e6657600080fd5b610e728a828b01610d14565b989b979a50959850939692959293505050565b600060208284031215610e9757600080fd5b5035919050565b634e487b7160e01b600052602160045260246000fd5b60098110610ed257634e487b7160e01b600052602160045260246000fd5b9052565b6000815180845260005b81811015610efc57602081850181015186830182015201610ee0565b506000602082860101526020601f19601f83011685010191505092915050565b878152866020820152856040820152846060820152610f3e6080820185610eb4565b60e060a08201526000610f5460e0830185610ed6565b90506001600160401b03831660c083015298975050505050505050565b600060208083018184528085518083526040925060408601915060408160051b87010184880160005b8381101561102457603f19898403018552815160e081518552888201518986015287820151888601526060808301518187015250608080830151610fe082880182610eb4565b505060a0808301518282880152610ff983880182610ed6565b60c0948501516001600160401b03169790940196909652505094870194925090860190600101610f9a565b509098975050505050505050565b60006020828403121561104457600080fd5b5051919050565b60006020828403121561105d57600080fd5b8151801515811461106d57600080fd5b9392505050565b634e487b7160e01b600052601160045260246000fd5b60006001820161109c5761109c611074565b5060010190565b634e487b7160e01b600052604160045260246000fd5b600181811c908216806110cd57607f821691505b6020821081036110ed57634e487b7160e01b600052602260045260246000fd5b50919050565b601f82111561113f576000816000526020600020601f850160051c8101602086101561111c5750805b601f850160051c820191505b8181101561113b57828155600101611128565b5050505b505050565b81516001600160401b0381111561115d5761115d6110a3565b6111718161116b84546110b9565b846110f3565b602080601f8311600181146111a6576000841561118e5750858301515b600019600386901b1c1916600185901b17855561113b565b600085815260208120601f198616915b828110156111d5578886015182559484019460019091019084016111b6565b50858210156111f35787850151600019600388901b60f8161c191681555b5050505050600190811b01905550565b61120d8185610eb4565b60406020820152816040820152818360608301376000818301606090810191909152601f909201601f1916010192915050565b61124a8183610eb4565b604060208201819052600090820152606001919050565b808201828112600083128015821682158216171561128157611281611074565b505092915050565b634e487b7160e01b600052603260045260246000fdfea2646970667358221220ee3537285ac9cb263f07962691741cbe2eb999dd7af50cde36b4ac9fa2f8d0fa64736f6c63430008180033";

type FFEventConstructorParams =
  | [signer?: Signer]
  | ConstructorParameters<typeof ContractFactory>;

const isSuperArgs = (
  xs: FFEventConstructorParams
): xs is ConstructorParameters<typeof ContractFactory> => xs.length > 1;

export class FFEvent__factory extends ContractFactory {
  constructor(...args: FFEventConstructorParams) {
    if (isSuperArgs(args)) {
      super(...args);
    } else {
      super(_abi, _bytecode, args[0]);
    }
  }

  override getDeployTransaction(
    rolesAddress: AddressLike,
    overrides?: NonPayableOverrides & { from?: string }
  ): Promise<ContractDeployTransaction> {
    return super.getDeployTransaction(rolesAddress, overrides || {});
  }
  override deploy(
    rolesAddress: AddressLike,
    overrides?: NonPayableOverrides & { from?: string }
  ) {
    return super.deploy(rolesAddress, overrides || {}) as Promise<
      FFEvent & {
        deploymentTransaction(): ContractTransactionResponse;
      }
    >;
  }
  override connect(runner: ContractRunner | null): FFEvent__factory {
    return super.connect(runner) as FFEvent__factory;
  }

  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): FFEventInterface {
    return new Interface(_abi) as FFEventInterface;
  }
  static connect(address: string, runner?: ContractRunner | null): FFEvent {
    return new Contract(address, _abi, runner) as unknown as FFEvent;
  }
}
