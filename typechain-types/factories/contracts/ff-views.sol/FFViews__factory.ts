/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */
import {
  Contract,
  ContractFactory,
  ContractTransactionResponse,
  Interface,
} from "ethers";
import type {
  Signer,
  AddressLike,
  ContractDeployTransaction,
  ContractRunner,
} from "ethers";
import type { NonPayableOverrides } from "../../../common";
import type {
  FFViews,
  FFViewsInterface,
} from "../../../contracts/ff-views.sol/FFViews";

const _abi = [
  {
    inputs: [
      {
        internalType: "address",
        name: "league_",
        type: "address",
      },
      {
        internalType: "address",
        name: "club_",
        type: "address",
      },
      {
        internalType: "address",
        name: "player_",
        type: "address",
      },
      {
        internalType: "address",
        name: "game_",
        type: "address",
      },
      {
        internalType: "address",
        name: "lineup_",
        type: "address",
      },
      {
        internalType: "address",
        name: "event_",
        type: "address",
      },
    ],
    stateMutability: "nonpayable",
    type: "constructor",
  },
  {
    inputs: [],
    name: "club",
    outputs: [
      {
        internalType: "contract IFFClub",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "ffEvent",
    outputs: [
      {
        internalType: "contract IFFEvent",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "game",
    outputs: [
      {
        internalType: "contract IFFGame",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "gameId",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "clubId",
        type: "uint256",
      },
    ],
    name: "getAlineacion",
    outputs: [
      {
        internalType: "uint256[]",
        name: "",
        type: "uint256[]",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "clubId",
        type: "uint256",
      },
    ],
    name: "getClub",
    outputs: [
      {
        components: [
          {
            internalType: "uint256",
            name: "id",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "leagueId",
            type: "uint256",
          },
          {
            internalType: "string",
            name: "name",
            type: "string",
          },
          {
            internalType: "bool",
            name: "fixedGoalkeeper",
            type: "bool",
          },
          {
            internalType: "address",
            name: "owner",
            type: "address",
          },
        ],
        internalType: "struct IFFClub.Club",
        name: "",
        type: "tuple",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "eventId",
        type: "uint256",
      },
    ],
    name: "getEvento",
    outputs: [
      {
        components: [
          {
            internalType: "uint256",
            name: "id",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "gameId",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "clubId",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "playerId",
            type: "uint256",
          },
          {
            internalType: "uint8",
            name: "eventType",
            type: "uint8",
          },
          {
            internalType: "string",
            name: "dataCid",
            type: "string",
          },
          {
            internalType: "uint64",
            name: "timestamp",
            type: "uint64",
          },
        ],
        internalType: "struct IFFEvent.GameEvent",
        name: "",
        type: "tuple",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "gameId",
        type: "uint256",
      },
    ],
    name: "getJuego",
    outputs: [
      {
        components: [
          {
            internalType: "uint256",
            name: "id",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "clubAId",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "clubBId",
            type: "uint256",
          },
          {
            internalType: "uint64",
            name: "scheduledAt",
            type: "uint64",
          },
          {
            internalType: "string",
            name: "metadataCid",
            type: "string",
          },
          {
            internalType: "bool",
            name: "closed",
            type: "bool",
          },
        ],
        internalType: "struct IFFGame.Game",
        name: "",
        type: "tuple",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "playerId",
        type: "uint256",
      },
    ],
    name: "getJugador",
    outputs: [
      {
        components: [
          {
            internalType: "uint256",
            name: "id",
            type: "uint256",
          },
          {
            internalType: "address",
            name: "account",
            type: "address",
          },
          {
            internalType: "string",
            name: "fullName",
            type: "string",
          },
          {
            internalType: "string",
            name: "nickname",
            type: "string",
          },
          {
            internalType: "uint8",
            name: "primaryPosition",
            type: "uint8",
          },
          {
            internalType: "uint8",
            name: "secondaryPosition",
            type: "uint8",
          },
          {
            internalType: "uint8",
            name: "tertiaryPosition",
            type: "uint8",
          },
          {
            internalType: "uint8",
            name: "level",
            type: "uint8",
          },
          {
            internalType: "bool",
            name: "isMinor",
            type: "bool",
          },
          {
            internalType: "address",
            name: "guardian",
            type: "address",
          },
          {
            internalType: "enum IFFPlayer.Visibility",
            name: "visibility",
            type: "uint8",
          },
          {
            internalType: "uint256",
            name: "clubId",
            type: "uint256",
          },
        ],
        internalType: "struct IFFPlayer.Player",
        name: "",
        type: "tuple",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "leagueId",
        type: "uint256",
      },
    ],
    name: "getLiga",
    outputs: [
      {
        components: [
          {
            internalType: "uint256",
            name: "id",
            type: "uint256",
          },
          {
            internalType: "string",
            name: "name",
            type: "string",
          },
          {
            internalType: "string",
            name: "location",
            type: "string",
          },
          {
            internalType: "string",
            name: "category",
            type: "string",
          },
          {
            internalType: "address",
            name: "owner",
            type: "address",
          },
          {
            internalType: "uint8",
            name: "verificationLevel",
            type: "uint8",
          },
        ],
        internalType: "struct IFFLeague.League",
        name: "",
        type: "tuple",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "league",
    outputs: [
      {
        internalType: "contract IFFLeague",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "lineup",
    outputs: [
      {
        internalType: "contract IFFLineup",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "player",
    outputs: [
      {
        internalType: "contract IFFPlayer",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
] as const;

const _bytecode =
  "0x60806040523480156200001157600080fd5b50604051620011d3380380620011d38339810160408190526200003491620000c4565b600080546001600160a01b03199081166001600160a01b039889161790915560018054821696881696909617909555600280548616948716949094179093556003805485169286169290921790915560048054841691851691909117905560058054909216921691909117905562000145565b80516001600160a01b0381168114620000bf57600080fd5b919050565b60008060008060008060c08789031215620000de57600080fd5b620000e987620000a7565b9550620000f960208801620000a7565b94506200010960408801620000a7565b93506200011960608801620000a7565b92506200012960808801620000a7565b91506200013960a08801620000a7565b90509295509295509295565b61107e80620001556000396000f3fe608060405234801561001057600080fd5b50600436106100b45760003560e01c8063a7de9c9a11610071578063a7de9c9a14610162578063be78e75214610182578063c3fe3e28146101a2578063d10f4d24146101b5578063d9b29297146101d5578063e4e3eaca146101e857600080fd5b80630efd0973146100b95780631ef9bbf0146100e957806348db5f89146101095780635adf16af1461011c57806386252a701461013c578063a3462e621461014f575b600080fd5b6001546100cc906001600160a01b031681565b6040516001600160a01b0390911681526020015b60405180910390f35b6100fc6100f736600461063a565b610208565b6040516100e091906106a3565b6002546100cc906001600160a01b031681565b61012f61012a36600461063a565b6102c3565b6040516100e09190610708565b6005546100cc906001600160a01b031681565b6004546100cc906001600160a01b031681565b610175610170366004610765565b610371565b6040516100e09190610787565b61019561019036600461063a565b6103f3565b6040516100e091906107cb565b6003546100cc906001600160a01b031681565b6101c86101c336600461063a565b6104a9565b6040516100e0919061087b565b6000546100cc906001600160a01b031681565b6101fb6101f636600461063a565b61057d565b6040516100e0919061097e565b61024c6040518060c0016040528060008152602001600081526020016000815260200160006001600160401b03168152602001606081526020016000151581525090565b6003546040516328bddef360e21b8152600481018490526001600160a01b039091169063a2f77bcc90602401600060405180830381865afa158015610295573d6000803e3d6000fd5b505050506040513d6000823e601f3d908101601f191682016040526102bd9190810190610b5b565b92915050565b6103006040518060a0016040528060008152602001600081526020016060815260200160001515815260200160006001600160a01b031681525090565b600154604051635adf16af60e01b8152600481018490526001600160a01b0390911690635adf16af90602401600060405180830381865afa158015610349573d6000803e3d6000fd5b505050506040513d6000823e601f3d908101601f191682016040526102bd9190810190610c1e565b60048054604051632d5d771960e21b8152918201849052602482018390526060916001600160a01b039091169063b575dc6490604401600060405180830381865afa1580156103c4573d6000803e3d6000fd5b505050506040513d6000823e601f3d908101601f191682016040526103ec9190810190610cc0565b9392505050565b6104386040518060c001604052806000815260200160608152602001606081526020016060815260200160006001600160a01b03168152602001600060ff1681525090565b6000546040516322a8b55560e11b8152600481018490526001600160a01b03909116906345516aaa90602401600060405180830381865afa158015610481573d6000803e3d6000fd5b505050506040513d6000823e601f3d908101601f191682016040526102bd9190810190610d76565b60408051610180810182526000808252602082018190526060928201839052828201929092526080810182905260a0810182905260c0810182905260e08101829052610100810182905261012081018290526101408101829052610160810191909152600254604051631cab5c9d60e31b8152600481018490526001600160a01b039091169063e55ae4e890602401600060405180830381865afa158015610555573d6000803e3d6000fd5b505050506040513d6000823e601f3d908101601f191682016040526102bd9190810190610e57565b6105c96040518060e0016040528060008152602001600081526020016000815260200160008152602001600060ff1681526020016060815260200160006001600160401b031681525090565b6005546040516336ba927760e11b8152600481018490526001600160a01b0390911690636d7524ee90602401600060405180830381865afa158015610612573d6000803e3d6000fd5b505050506040513d6000823e601f3d908101601f191682016040526102bd9190810190610f92565b60006020828403121561064c57600080fd5b5035919050565b60005b8381101561066e578181015183820152602001610656565b50506000910152565b6000815180845261068f816020860160208601610653565b601f01601f19169290920160200192915050565b602081528151602082015260208201516040820152604082015160608201526001600160401b0360608301511660808201526000608083015160c060a08401526106f060e0840182610677565b905060a0840151151560c08401528091505092915050565b6020815281516020820152602082015160408201526000604083015160a0606084015261073860c0840182610677565b60608501511515608085810191909152909401516001600160a01b031660a0909301929092525090919050565b6000806040838503121561077857600080fd5b50508035926020909101359150565b6020808252825182820181905260009190848201906040850190845b818110156107bf578351835292840192918401916001016107a3565b50909695505050505050565b60208152815160208201526000602083015160c060408401526107f160e0840182610677565b90506040840151601f198085840301606086015261080f8383610677565b925060608601519150808584030160808601525061082d8282610677565b91505060018060a01b0360808501511660a084015260ff60a08501511660c08401528091505092915050565b6002811061087757634e487b7160e01b600052602160045260246000fd5b9052565b6020815281516020820152600060208301516108a260408401826001600160a01b03169052565b5060408301516101808060608501526108bf6101a0850183610677565b91506060850151601f198584030160808601526108dc8382610677565b92505060808501516108f360a086018260ff169052565b5060a085015160ff811660c08601525060c085015160ff811660e08601525060e08501516101006109288187018360ff169052565b860151905061012061093d8682018315159052565b8601519050610140610959868201836001600160a01b03169052565b860151905061016061096d86820183610859565b959095015193019290925250919050565b602081528151602082015260208201516040820152604082015160608201526060820151608082015260ff60808301511660a0820152600060a083015160e060c08401526109d0610100840182610677565b90506001600160401b0360c08501511660e08401528091505092915050565b634e487b7160e01b600052604160045260246000fd5b60405160c081016001600160401b0381118282101715610a2757610a276109ef565b60405290565b60405160a081016001600160401b0381118282101715610a2757610a276109ef565b60405161018081016001600160401b0381118282101715610a2757610a276109ef565b60405160e081016001600160401b0381118282101715610a2757610a276109ef565b604051601f8201601f191681016001600160401b0381118282101715610abc57610abc6109ef565b604052919050565b80516001600160401b0381168114610adb57600080fd5b919050565b600082601f830112610af157600080fd5b81516001600160401b03811115610b0a57610b0a6109ef565b610b1d601f8201601f1916602001610a94565b818152846020838601011115610b3257600080fd5b610b43826020830160208701610653565b949350505050565b80518015158114610adb57600080fd5b600060208284031215610b6d57600080fd5b81516001600160401b0380821115610b8457600080fd5b9083019060c08286031215610b9857600080fd5b610ba0610a05565b825181526020830151602082015260408301516040820152610bc460608401610ac4565b6060820152608083015182811115610bdb57600080fd5b610be787828601610ae0565b608083015250610bf960a08401610b4b565b60a082015295945050505050565b80516001600160a01b0381168114610adb57600080fd5b600060208284031215610c3057600080fd5b81516001600160401b0380821115610c4757600080fd5b9083019060a08286031215610c5b57600080fd5b610c63610a2d565b8251815260208301516020820152604083015182811115610c8357600080fd5b610c8f87828601610ae0565b604083015250610ca160608401610b4b565b6060820152610cb260808401610c07565b608082015295945050505050565b60006020808385031215610cd357600080fd5b82516001600160401b0380821115610cea57600080fd5b818501915085601f830112610cfe57600080fd5b815181811115610d1057610d106109ef565b8060051b9150610d21848301610a94565b8181529183018401918481019088841115610d3b57600080fd5b938501935b83851015610d5957845182529385019390850190610d40565b98975050505050505050565b805160ff81168114610adb57600080fd5b600060208284031215610d8857600080fd5b81516001600160401b0380821115610d9f57600080fd5b9083019060c08286031215610db357600080fd5b610dbb610a05565b82518152602083015182811115610dd157600080fd5b610ddd87828601610ae0565b602083015250604083015182811115610df557600080fd5b610e0187828601610ae0565b604083015250606083015182811115610e1957600080fd5b610e2587828601610ae0565b606083015250610e3760808401610c07565b6080820152610bf960a08401610d65565b805160028110610adb57600080fd5b600060208284031215610e6957600080fd5b81516001600160401b0380821115610e8057600080fd5b908301906101808286031215610e9557600080fd5b610e9d610a4f565b82518152610ead60208401610c07565b6020820152604083015182811115610ec457600080fd5b610ed087828601610ae0565b604083015250606083015182811115610ee857600080fd5b610ef487828601610ae0565b606083015250610f0660808401610d65565b6080820152610f1760a08401610d65565b60a0820152610f2860c08401610d65565b60c0820152610f3960e08401610d65565b60e08201526101009150610f4e828401610b4b565b828201526101209150610f62828401610c07565b828201526101409150610f76828401610e48565b9181019190915261016091820151918101919091529392505050565b600060208284031215610fa457600080fd5b81516001600160401b0380821115610fbb57600080fd5b9083019060e08286031215610fcf57600080fd5b610fd7610a72565b8251815260208301516020820152604083015160408201526060830151606082015261100560808401610d65565b608082015260a08301518281111561101c57600080fd5b61102887828601610ae0565b60a08301525061103a60c08401610ac4565b60c08201529594505050505056fea264697066735822122022f71043ddef9028ce30fba7f096850dc75e266e99e4e13b5e743050156460ee64736f6c63430008180033";

type FFViewsConstructorParams =
  | [signer?: Signer]
  | ConstructorParameters<typeof ContractFactory>;

const isSuperArgs = (
  xs: FFViewsConstructorParams
): xs is ConstructorParameters<typeof ContractFactory> => xs.length > 1;

export class FFViews__factory extends ContractFactory {
  constructor(...args: FFViewsConstructorParams) {
    if (isSuperArgs(args)) {
      super(...args);
    } else {
      super(_abi, _bytecode, args[0]);
    }
  }

  override getDeployTransaction(
    league_: AddressLike,
    club_: AddressLike,
    player_: AddressLike,
    game_: AddressLike,
    lineup_: AddressLike,
    event_: AddressLike,
    overrides?: NonPayableOverrides & { from?: string }
  ): Promise<ContractDeployTransaction> {
    return super.getDeployTransaction(
      league_,
      club_,
      player_,
      game_,
      lineup_,
      event_,
      overrides || {}
    );
  }
  override deploy(
    league_: AddressLike,
    club_: AddressLike,
    player_: AddressLike,
    game_: AddressLike,
    lineup_: AddressLike,
    event_: AddressLike,
    overrides?: NonPayableOverrides & { from?: string }
  ) {
    return super.deploy(
      league_,
      club_,
      player_,
      game_,
      lineup_,
      event_,
      overrides || {}
    ) as Promise<
      FFViews & {
        deploymentTransaction(): ContractTransactionResponse;
      }
    >;
  }
  override connect(runner: ContractRunner | null): FFViews__factory {
    return super.connect(runner) as FFViews__factory;
  }

  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): FFViewsInterface {
    return new Interface(_abi) as FFViewsInterface;
  }
  static connect(address: string, runner?: ContractRunner | null): FFViews {
    return new Contract(address, _abi, runner) as unknown as FFViews;
  }
}
