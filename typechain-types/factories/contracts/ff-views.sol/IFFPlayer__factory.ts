/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */

import { Contract, Interface, type ContractRunner } from "ethers";
import type {
  IFFPlayer,
  IFFPlayerInterface,
} from "../../../contracts/ff-views.sol/IFFPlayer";

const _abi = [
  {
    inputs: [
      {
        internalType: "uint256",
        name: "playerId",
        type: "uint256",
      },
    ],
    name: "getPlayer",
    outputs: [
      {
        components: [
          {
            internalType: "uint256",
            name: "id",
            type: "uint256",
          },
          {
            internalType: "address",
            name: "account",
            type: "address",
          },
          {
            internalType: "string",
            name: "fullName",
            type: "string",
          },
          {
            internalType: "string",
            name: "nickname",
            type: "string",
          },
          {
            internalType: "uint8",
            name: "primaryPosition",
            type: "uint8",
          },
          {
            internalType: "uint8",
            name: "secondaryPosition",
            type: "uint8",
          },
          {
            internalType: "uint8",
            name: "tertiaryPosition",
            type: "uint8",
          },
          {
            internalType: "uint8",
            name: "level",
            type: "uint8",
          },
          {
            internalType: "bool",
            name: "isMinor",
            type: "bool",
          },
          {
            internalType: "address",
            name: "guardian",
            type: "address",
          },
          {
            internalType: "enum IFFPlayer.Visibility",
            name: "visibility",
            type: "uint8",
          },
          {
            internalType: "uint256",
            name: "clubId",
            type: "uint256",
          },
        ],
        internalType: "struct IFFPlayer.Player",
        name: "",
        type: "tuple",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
] as const;

export class IFFPlayer__factory {
  static readonly abi = _abi;
  static createInterface(): IFFPlayerInterface {
    return new Interface(_abi) as IFFPlayerInterface;
  }
  static connect(address: string, runner?: ContractRunner | null): IFFPlayer {
    return new Contract(address, _abi, runner) as unknown as IFFPlayer;
  }
}
