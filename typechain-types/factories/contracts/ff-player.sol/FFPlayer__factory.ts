/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */
import {
  Contract,
  ContractFactory,
  ContractTransactionResponse,
  Interface,
} from "ethers";
import type {
  Signer,
  AddressLike,
  ContractDeployTransaction,
  ContractRunner,
} from "ethers";
import type { NonPayableOverrides } from "../../../common";
import type {
  FFPlayer,
  FFPlayerInterface,
} from "../../../contracts/ff-player.sol/FFPlayer";

const _abi = [
  {
    inputs: [
      {
        internalType: "address",
        name: "rolesAddress",
        type: "address",
      },
    ],
    stateMutability: "nonpayable",
    type: "constructor",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "uint256",
        name: "playerId",
        type: "uint256",
      },
      {
        indexed: true,
        internalType: "uint256",
        name: "clubId",
        type: "uint256",
      },
      {
        indexed: true,
        internalType: "address",
        name: "executor",
        type: "address",
      },
    ],
    name: "PlayerJoinedClub",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "uint256",
        name: "id",
        type: "uint256",
      },
      {
        indexed: true,
        internalType: "address",
        name: "account",
        type: "address",
      },
      {
        indexed: false,
        internalType: "string",
        name: "nickname",
        type: "string",
      },
      {
        indexed: false,
        internalType: "bool",
        name: "isMinor",
        type: "bool",
      },
    ],
    name: "PlayerRegistered",
    type: "event",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    name: "accountToPlayerId",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "playerId",
        type: "uint256",
      },
    ],
    name: "getPlayer",
    outputs: [
      {
        components: [
          {
            internalType: "uint256",
            name: "id",
            type: "uint256",
          },
          {
            internalType: "address",
            name: "account",
            type: "address",
          },
          {
            internalType: "string",
            name: "nickname",
            type: "string",
          },
          {
            internalType: "uint8",
            name: "primaryPosition",
            type: "uint8",
          },
          {
            internalType: "uint8",
            name: "level",
            type: "uint8",
          },
          {
            internalType: "bool",
            name: "isMinor",
            type: "bool",
          },
          {
            internalType: "address",
            name: "guardian",
            type: "address",
          },
          {
            internalType: "enum FFPlayer.Visibility",
            name: "visibility",
            type: "uint8",
          },
          {
            internalType: "uint256",
            name: "clubId",
            type: "uint256",
          },
        ],
        internalType: "struct FFPlayer.Player",
        name: "",
        type: "tuple",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "nextPlayerId",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "playerId",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "clubId",
        type: "uint256",
      },
    ],
    name: "playerJoinClub",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "string",
        name: "nickname",
        type: "string",
      },
      {
        internalType: "uint8",
        name: "primaryPosition",
        type: "uint8",
      },
      {
        internalType: "uint8",
        name: "level",
        type: "uint8",
      },
      {
        internalType: "bool",
        name: "isMinor",
        type: "bool",
      },
      {
        internalType: "address",
        name: "guardian",
        type: "address",
      },
      {
        internalType: "enum FFPlayer.Visibility",
        name: "visibility",
        type: "uint8",
      },
    ],
    name: "registerPlayerFF",
    outputs: [
      {
        internalType: "uint256",
        name: "id",
        type: "uint256",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "roles",
    outputs: [
      {
        internalType: "contract FFRoles",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
] as const;

const _bytecode =
  "0x608060405234801561001057600080fd5b50604051610e58380380610e5883398101604081905261002f91610054565b600080546001600160a01b0319166001600160a01b0392909216919091179055610084565b60006020828403121561006657600080fd5b81516001600160a01b038116811461007d57600080fd5b9392505050565b610dc5806100936000396000f3fe608060405234801561001057600080fd5b50600436106100625760003560e01c80631373986e1461006757806319863f351461007c578063392f5f641461009857806377e98618146100c3578063a36cafd3146100d6578063e55ae4e8146100f6575b600080fd5b61007a6100753660046108f0565b610116565b005b61008560015481565b6040519081526020015b60405180910390f35b6000546100ab906001600160a01b031681565b6040516001600160a01b03909116815260200161008f565b6100856100d136600461096a565b610372565b6100856100e4366004610a2e565b60036020526000908152604090205481565b610109610104366004610a50565b610759565b60405161008f9190610ae7565b600082815260026020526040902060018101546001600160a01b031633148061021657506000546040805163fc8045b160e01b815290516001600160a01b03909216916391d1485491839163fc8045b1916004808201926020929091908290030181865afa15801561018c573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906101b09190610b99565b6040516001600160e01b031960e084901b1681526004810191909152336024820152604401602060405180830381865afa1580156101f2573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906102169190610bb2565b806102f857506000546040805163a217fddf60e01b815290516001600160a01b03909216916391d1485491839163a217fddf916004808201926020929091908290030181865afa15801561026e573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906102929190610b99565b6040516001600160e01b031960e084901b1681526004810191909152336024820152604401602060405180830381865afa1580156102d4573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906102f89190610bb2565b6103375760405162461bcd60e51b815260206004820152600b60248201526a139bdd08185b1b1bddd95960aa1b60448201526064015b60405180910390fd5b600481018290556040513390839085907ffa2a48f9099430f74e36a3013795112d33a1d8e1f7a2d980ebbd42ba03d1e99f90600090a4505050565b33600090815260036020526040812054156103c45760405162461bcd60e51b8152602060048201526012602482015271105b1c9958591e481c9959da5cdd195c995960721b604482015260640161032e565b831561054b576001600160a01b0383166104145760405162461bcd60e51b815260206004820152601160248201527011dd585c991a585b881c995c5d5a5c9959607a1b604482015260640161032e565b6000546040805163093a953d60e21b815290516001600160a01b03909216916391d148549183916324ea54f4916004808201926020929091908290030181865afa158015610466573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061048a9190610b99565b6040516001600160e01b031960e084901b16815260048101919091526001600160a01b0386166024820152604401602060405180830381865afa1580156104d5573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906104f99190610bb2565b8061050c57506001600160a01b03831633145b61054b5760405162461bcd60e51b815260206004820152601060248201526f11dd585c991a585b881a5b9d985b1a5960821b604482015260640161032e565b60016000815461055a90610bcf565b9190508190559050604051806101200160405280828152602001336001600160a01b0316815260200189898080601f01602080910402602001604051908101604052809392919081815260200183838082843760009201919091525050509082525060ff80891660208301528716604082015285151560608201526001600160a01b038516608082015260a0018360018111156105f9576105f9610aaf565b815260006020918201819052838152600280835260409182902084518155928401516001840180546001600160a01b0319166001600160a01b03909216919091179055908301519082019061064e9082610c97565b506060820151600382018054608085015160a086015160c08701516001600160a01b03166301000000026301000000600160b81b031991151562010000029190911662010000600160b81b031960ff9384166101000261ffff1990951693909616929092179290921793909316929092179190911780825560e0840151919060ff60b81b1916600160b81b8360018111156106eb576106eb610aaf565b0217905550610100919091015160049091015533600081815260036020526040908190208390555182907ffbefdb7d5fe7aa920b9ef2af513722516b78a93225d196b4132d64032de6fc1390610746908c908c908a90610d57565b60405180910390a3979650505050505050565b604080516101208101825260008082526020820181905260609282018390529181018290526080810182905260a0810182905260c0810182905260e081018290526101008101919091526000828152600260208181526040928390208351610120810185528154815260018201546001600160a01b031692810192909252918201805491938401916107ea90610c0c565b80601f016020809104026020016040519081016040528092919081815260200182805461081690610c0c565b80156108635780601f1061083857610100808354040283529160200191610863565b820191906000526020600020905b81548152906001019060200180831161084657829003601f168201915b5050509183525050600382015460ff80821660208401526101008204811660408401526201000082048116151560608401526001600160a01b036301000000830416608084015260a090920191600160b81b9091041660018111156108ca576108ca610aaf565b60018111156108db576108db610aaf565b81526020016004820154815250509050919050565b6000806040838503121561090357600080fd5b50508035926020909101359150565b803560ff8116811461092357600080fd5b919050565b801515811461093657600080fd5b50565b803561092381610928565b80356001600160a01b038116811461092357600080fd5b80356002811061092357600080fd5b600080600080600080600060c0888a03121561098557600080fd5b873567ffffffffffffffff8082111561099d57600080fd5b818a0191508a601f8301126109b157600080fd5b8135818111156109c057600080fd5b8b60208285010111156109d257600080fd5b6020928301995097506109e8918a019050610912565b94506109f660408901610912565b9350610a0460608901610939565b9250610a1260808901610944565b9150610a2060a0890161095b565b905092959891949750929550565b600060208284031215610a4057600080fd5b610a4982610944565b9392505050565b600060208284031215610a6257600080fd5b5035919050565b6000815180845260005b81811015610a8f57602081850181015186830182015201610a73565b506000602082860101526020601f19601f83011685010191505092915050565b634e487b7160e01b600052602160045260246000fd5b60028110610ae357634e487b7160e01b600052602160045260246000fd5b9052565b602081528151602082015260006020830151610b0e60408401826001600160a01b03169052565b506040830151610120806060850152610b2b610140850183610a69565b91506060850151610b41608086018260ff169052565b50608085015160ff811660a08601525060a085015180151560c08601525060c08501516001600160a01b03811660e08601525060e0850151610100610b8881870183610ac5565b959095015193019290925250919050565b600060208284031215610bab57600080fd5b5051919050565b600060208284031215610bc457600080fd5b8151610a4981610928565b600060018201610bef57634e487b7160e01b600052601160045260246000fd5b5060010190565b634e487b7160e01b600052604160045260246000fd5b600181811c90821680610c2057607f821691505b602082108103610c4057634e487b7160e01b600052602260045260246000fd5b50919050565b601f821115610c92576000816000526020600020601f850160051c81016020861015610c6f5750805b601f850160051c820191505b81811015610c8e57828155600101610c7b565b5050505b505050565b815167ffffffffffffffff811115610cb157610cb1610bf6565b610cc581610cbf8454610c0c565b84610c46565b602080601f831160018114610cfa5760008415610ce25750858301515b600019600386901b1c1916600185901b178555610c8e565b600085815260208120601f198616915b82811015610d2957888601518255948401946001909101908401610d0a565b5085821015610d475787850151600019600388901b60f8161c191681555b5050505050600190811b01905550565b6040815282604082015282846060830137600060608483018101919091529115156020820152601f909201601f19169091010191905056fea26469706673582212201884a7dca986e18e471a4cee978a6449270731377ffd3680c0877281d4d68e1364736f6c63430008180033";

type FFPlayerConstructorParams =
  | [signer?: Signer]
  | ConstructorParameters<typeof ContractFactory>;

const isSuperArgs = (
  xs: FFPlayerConstructorParams
): xs is ConstructorParameters<typeof ContractFactory> => xs.length > 1;

export class FFPlayer__factory extends ContractFactory {
  constructor(...args: FFPlayerConstructorParams) {
    if (isSuperArgs(args)) {
      super(...args);
    } else {
      super(_abi, _bytecode, args[0]);
    }
  }

  override getDeployTransaction(
    rolesAddress: AddressLike,
    overrides?: NonPayableOverrides & { from?: string }
  ): Promise<ContractDeployTransaction> {
    return super.getDeployTransaction(rolesAddress, overrides || {});
  }
  override deploy(
    rolesAddress: AddressLike,
    overrides?: NonPayableOverrides & { from?: string }
  ) {
    return super.deploy(rolesAddress, overrides || {}) as Promise<
      FFPlayer & {
        deploymentTransaction(): ContractTransactionResponse;
      }
    >;
  }
  override connect(runner: ContractRunner | null): FFPlayer__factory {
    return super.connect(runner) as FFPlayer__factory;
  }

  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): FFPlayerInterface {
    return new Interface(_abi) as FFPlayerInterface;
  }
  static connect(address: string, runner?: ContractRunner | null): FFPlayer {
    return new Contract(address, _abi, runner) as unknown as FFPlayer;
  }
}
