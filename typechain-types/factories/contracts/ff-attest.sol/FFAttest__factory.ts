/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */
import {
  Contract,
  ContractFactory,
  ContractTransactionResponse,
  Interface,
} from "ethers";
import type {
  Signer,
  AddressLike,
  ContractDeployTransaction,
  ContractRunner,
} from "ethers";
import type { NonPayableOverrides } from "../../../common";
import type {
  FFAttest,
  FFAttestInterface,
} from "../../../contracts/ff-attest.sol/FFAttest";

const _abi = [
  {
    inputs: [
      {
        internalType: "address",
        name: "rolesAddress",
        type: "address",
      },
    ],
    stateMutability: "nonpayable",
    type: "constructor",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "bytes32",
        name: "id",
        type: "bytes32",
      },
      {
        indexed: true,
        internalType: "address",
        name: "subject",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "issuer",
        type: "address",
      },
      {
        indexed: false,
        internalType: "uint8",
        name: "level",
        type: "uint8",
      },
      {
        indexed: false,
        internalType: "string",
        name: "schema",
        type: "string",
      },
    ],
    name: "Attested",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "subject",
        type: "address",
      },
      {
        indexed: false,
        internalType: "uint8",
        name: "newLevel",
        type: "uint8",
      },
      {
        indexed: true,
        internalType: "address",
        name: "executor",
        type: "address",
      },
    ],
    name: "VerificationElevated",
    type: "event",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "subject",
        type: "address",
      },
      {
        internalType: "uint8",
        name: "level",
        type: "uint8",
      },
      {
        internalType: "string",
        name: "schema",
        type: "string",
      },
      {
        internalType: "string",
        name: "data",
        type: "string",
      },
    ],
    name: "attest",
    outputs: [
      {
        internalType: "bytes32",
        name: "id",
        type: "bytes32",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "bytes32",
        name: "",
        type: "bytes32",
      },
    ],
    name: "attestations",
    outputs: [
      {
        internalType: "bytes32",
        name: "id",
        type: "bytes32",
      },
      {
        internalType: "address",
        name: "subject",
        type: "address",
      },
      {
        internalType: "address",
        name: "issuer",
        type: "address",
      },
      {
        internalType: "uint8",
        name: "level",
        type: "uint8",
      },
      {
        internalType: "string",
        name: "schema",
        type: "string",
      },
      {
        internalType: "string",
        name: "data",
        type: "string",
      },
      {
        internalType: "uint64",
        name: "timestamp",
        type: "uint64",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "subject",
        type: "address",
      },
      {
        internalType: "uint8",
        name: "newLevel",
        type: "uint8",
      },
    ],
    name: "elevateVerification",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "nextAttestationSeq",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "roles",
    outputs: [
      {
        internalType: "contract FFRoles",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    name: "subjectVerificationLevel",
    outputs: [
      {
        internalType: "uint8",
        name: "",
        type: "uint8",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
] as const;

const _bytecode =
  "0x608060405234801561001057600080fd5b50604051610ee4380380610ee483398101604081905261002f91610054565b600080546001600160a01b0319166001600160a01b0392909216919091179055610084565b60006020828403121561006657600080fd5b81516001600160a01b038116811461007d57600080fd5b9392505050565b610e51806100936000396000f3fe608060405234801561001057600080fd5b50600436106100625760003560e01c8063069d3f61146100675780630b74359f1461008d578063392f5f64146100a257806339ea0fbb146100cd5780638a4e6a59146100d6578063940992a31461010b575b600080fd5b61007a610075366004610a23565b610131565b6040519081526020015b60405180910390f35b6100a061009b366004610ab4565b610585565b005b6000546100b5906001600160a01b031681565b6040516001600160a01b039091168152602001610084565b61007a60015481565b6100f96100e4366004610ae7565b60036020526000908152604090205460ff1681565b60405160ff9091168152602001610084565b61011e610119366004610b09565b610840565b6040516100849796959493929190610b68565b60008054604080516373b82edb60e11b815290516001600160a01b03909216916391d1485491839163e7705db6916004808201926020929091908290030181865afa158015610184573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906101a89190610bd4565b6040516001600160e01b031960e084901b1681526004810191909152336024820152604401602060405180830381865afa1580156101ea573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061020e9190610bed565b806102f057506000546040805163a217fddf60e01b815290516001600160a01b03909216916391d1485491839163a217fddf916004808201926020929091908290030181865afa158015610266573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061028a9190610bd4565b6040516001600160e01b031960e084901b1681526004810191909152336024820152604401602060405180830381865afa1580156102cc573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906102f09190610bed565b6103325760405162461bcd60e51b815260206004820152600e60248201526d139bdd08185d5d1a1bdc9a5e995960921b60448201526064015b60405180910390fd5b60016000815461034190610c0f565b918290555060405161036091908990339042908a908a90602001610c36565b60408051601f19818403018152828252805160209182012060e0840183528084526001600160a01b038b1684830152338484015260ff8a1660608501528251601f890183900483028101830190935287835293506080830191908890889081908401838280828437600092019190915250505090825250604080516020601f870181900481028201810190925285815291810191908690869081908401838280828437600092018290525093855250505067ffffffffffffffff4216602092830152838152600280835260409182902084518155928401516001840180546001600160a01b039283166001600160a01b0319909116179055918401519083018054606086015160ff16600160a01b026001600160a81b031990911692909316919091179190911790556080820151600382019061049d9082610d22565b5060a082015160048201906104b29082610d22565b5060c091909101516005909101805467ffffffffffffffff191667ffffffffffffffff9092169190911790556001600160a01b03871660009081526003602052604090205460ff908116908716111561052b576001600160a01b0387166000908152600360205260409020805460ff191660ff88161790555b336001600160a01b0316876001600160a01b0316827ff50cd3431a758e1fa522cdb4f2d0ab94ee2e25de4078b392ce5788af3501ae7689898960405161057393929190610de2565b60405180910390a49695505050505050565b60005460408051631839279160e21b815290516001600160a01b03909216916391d148549183916360e49e44916004808201926020929091908290030181865afa1580156105d7573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906105fb9190610bd4565b6040516001600160e01b031960e084901b1681526004810191909152336024820152604401602060405180830381865afa15801561063d573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906106619190610bed565b8061074357506000546040805163a217fddf60e01b815290516001600160a01b03909216916391d1485491839163a217fddf916004808201926020929091908290030181865afa1580156106b9573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906106dd9190610bd4565b6040516001600160e01b031960e084901b1681526004810191909152336024820152604401602060405180830381865afa15801561071f573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906107439190610bed565b6107805760405162461bcd60e51b815260206004820152600e60248201526d139bdd08185d5d1a1bdc9a5e995960921b6044820152606401610329565b6001600160a01b03821660009081526003602052604090205460ff908116908216116107dd5760405162461bcd60e51b815260206004820152600c60248201526b4d75737420656c657661746560a01b6044820152606401610329565b6001600160a01b038216600081815260036020908152604091829020805460ff191660ff861690811790915591519182523392917f819235889cd9ccc44c8a0a8079418deb62778725105d9b89ef437e1b30ee46ad910160405180910390a35050565b6002602081905260009182526040909120805460018201549282015460038301805492946001600160a01b039081169490831693600160a01b90930460ff169290919061088c90610c97565b80601f01602080910402602001604051908101604052809291908181526020018280546108b890610c97565b80156109055780601f106108da57610100808354040283529160200191610905565b820191906000526020600020905b8154815290600101906020018083116108e857829003601f168201915b50505050509080600401805461091a90610c97565b80601f016020809104026020016040519081016040528092919081815260200182805461094690610c97565b80156109935780601f1061096857610100808354040283529160200191610993565b820191906000526020600020905b81548152906001019060200180831161097657829003601f168201915b5050506005909301549192505067ffffffffffffffff1687565b80356001600160a01b03811681146109c457600080fd5b919050565b803560ff811681146109c457600080fd5b60008083601f8401126109ec57600080fd5b50813567ffffffffffffffff811115610a0457600080fd5b602083019150836020828501011115610a1c57600080fd5b9250929050565b60008060008060008060808789031215610a3c57600080fd5b610a45876109ad565b9550610a53602088016109c9565b9450604087013567ffffffffffffffff80821115610a7057600080fd5b610a7c8a838b016109da565b90965094506060890135915080821115610a9557600080fd5b50610aa289828a016109da565b979a9699509497509295939492505050565b60008060408385031215610ac757600080fd5b610ad0836109ad565b9150610ade602084016109c9565b90509250929050565b600060208284031215610af957600080fd5b610b02826109ad565b9392505050565b600060208284031215610b1b57600080fd5b5035919050565b6000815180845260005b81811015610b4857602081850181015186830182015201610b2c565b506000602082860101526020601f19601f83011685010191505092915050565b8781526001600160a01b0387811660208301528616604082015260ff8516606082015260e060808201819052600090610ba390830186610b22565b82810360a0840152610bb58186610b22565b91505067ffffffffffffffff831660c083015298975050505050505050565b600060208284031215610be657600080fd5b5051919050565b600060208284031215610bff57600080fd5b81518015158114610b0257600080fd5b600060018201610c2f57634e487b7160e01b600052601160045260246000fd5b5060010190565b86815260006bffffffffffffffffffffffff19808860601b166020840152808760601b1660348401525084604883015282846068840137506000910160680190815295945050505050565b634e487b7160e01b600052604160045260246000fd5b600181811c90821680610cab57607f821691505b602082108103610ccb57634e487b7160e01b600052602260045260246000fd5b50919050565b601f821115610d1d576000816000526020600020601f850160051c81016020861015610cfa5750805b601f850160051c820191505b81811015610d1957828155600101610d06565b5050505b505050565b815167ffffffffffffffff811115610d3c57610d3c610c81565b610d5081610d4a8454610c97565b84610cd1565b602080601f831160018114610d855760008415610d6d5750858301515b600019600386901b1c1916600185901b178555610d19565b600085815260208120601f198616915b82811015610db457888601518255948401946001909101908401610d95565b5085821015610dd25787850151600019600388901b60f8161c191681555b5050505050600190811b01905550565b60ff8416815260406020820152816040820152818360608301376000818301606090810191909152601f909201601f191601019291505056fea264697066735822122054bfb188d8a64a2a956421e2f84abfa8f5ad944670748a2aa19f7e6cabf50dcb64736f6c63430008180033";

type FFAttestConstructorParams =
  | [signer?: Signer]
  | ConstructorParameters<typeof ContractFactory>;

const isSuperArgs = (
  xs: FFAttestConstructorParams
): xs is ConstructorParameters<typeof ContractFactory> => xs.length > 1;

export class FFAttest__factory extends ContractFactory {
  constructor(...args: FFAttestConstructorParams) {
    if (isSuperArgs(args)) {
      super(...args);
    } else {
      super(_abi, _bytecode, args[0]);
    }
  }

  override getDeployTransaction(
    rolesAddress: AddressLike,
    overrides?: NonPayableOverrides & { from?: string }
  ): Promise<ContractDeployTransaction> {
    return super.getDeployTransaction(rolesAddress, overrides || {});
  }
  override deploy(
    rolesAddress: AddressLike,
    overrides?: NonPayableOverrides & { from?: string }
  ) {
    return super.deploy(rolesAddress, overrides || {}) as Promise<
      FFAttest & {
        deploymentTransaction(): ContractTransactionResponse;
      }
    >;
  }
  override connect(runner: ContractRunner | null): FFAttest__factory {
    return super.connect(runner) as FFAttest__factory;
  }

  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): FFAttestInterface {
    return new Interface(_abi) as FFAttestInterface;
  }
  static connect(address: string, runner?: ContractRunner | null): FFAttest {
    return new Contract(address, _abi, runner) as unknown as FFAttest;
  }
}
