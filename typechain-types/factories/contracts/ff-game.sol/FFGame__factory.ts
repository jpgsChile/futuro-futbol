/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */
import {
  Contract,
  ContractFactory,
  ContractTransactionResponse,
  Interface,
} from "ethers";
import type {
  Signer,
  AddressLike,
  ContractDeployTransaction,
  ContractRunner,
} from "ethers";
import type { NonPayableOverrides } from "../../../common";
import type {
  FFGame,
  FFGameInterface,
} from "../../../contracts/ff-game.sol/FFGame";

const _abi = [
  {
    inputs: [
      {
        internalType: "address",
        name: "rolesAddress",
        type: "address",
      },
    ],
    stateMutability: "nonpayable",
    type: "constructor",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "uint256",
        name: "id",
        type: "uint256",
      },
      {
        indexed: true,
        internalType: "address",
        name: "executor",
        type: "address",
      },
    ],
    name: "GameClosed",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "uint256",
        name: "id",
        type: "uint256",
      },
      {
        indexed: true,
        internalType: "uint256",
        name: "clubAId",
        type: "uint256",
      },
      {
        indexed: true,
        internalType: "uint256",
        name: "clubBId",
        type: "uint256",
      },
      {
        indexed: false,
        internalType: "uint64",
        name: "scheduledAt",
        type: "uint64",
      },
      {
        indexed: false,
        internalType: "string",
        name: "metadataCid",
        type: "string",
      },
    ],
    name: "GameCreated",
    type: "event",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "gameId",
        type: "uint256",
      },
    ],
    name: "closeGame",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "clubAId",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "clubBId",
        type: "uint256",
      },
      {
        internalType: "uint64",
        name: "scheduledAt",
        type: "uint64",
      },
    ],
    name: "createGame",
    outputs: [
      {
        internalType: "uint256",
        name: "id",
        type: "uint256",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "clubAId",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "clubBId",
        type: "uint256",
      },
      {
        internalType: "uint64",
        name: "scheduledAt",
        type: "uint64",
      },
      {
        internalType: "string",
        name: "metadataCid",
        type: "string",
      },
    ],
    name: "createGameFF",
    outputs: [
      {
        internalType: "uint256",
        name: "id",
        type: "uint256",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "gameId",
        type: "uint256",
      },
    ],
    name: "getGame",
    outputs: [
      {
        components: [
          {
            internalType: "uint256",
            name: "id",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "clubAId",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "clubBId",
            type: "uint256",
          },
          {
            internalType: "uint64",
            name: "scheduledAt",
            type: "uint64",
          },
          {
            internalType: "string",
            name: "metadataCid",
            type: "string",
          },
          {
            internalType: "bool",
            name: "closed",
            type: "bool",
          },
        ],
        internalType: "struct FFGame.Game",
        name: "",
        type: "tuple",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "nextGameId",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "roles",
    outputs: [
      {
        internalType: "contract FFRoles",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
] as const;

const _bytecode =
  "0x608060405234801561001057600080fd5b50604051610f79380380610f7983398101604081905261002f91610054565b600080546001600160a01b0319166001600160a01b0392909216919091179055610084565b60006020828403121561006657600080fd5b81516001600160a01b038116811461007d57600080fd5b9392505050565b610ee6806100936000396000f3fe608060405234801561001057600080fd5b50600436106100625760003560e01c80632d6ef31014610067578063392f5f641461007c5780634b95f8eb146100ac578063a2f77bcc146100cd578063b135bbb0146100ed578063cf92c3f5146100f6575b600080fd5b61007a610075366004610adf565b610109565b005b60005461008f906001600160a01b031681565b6040516001600160a01b0390911681526020015b60405180910390f35b6100bf6100ba366004610b15565b61037c565b6040519081526020016100a3565b6100e06100db366004610adf565b61067a565b6040516100a39190610b4a565b6100bf60015481565b6100bf610104366004610bea565b6107b6565b6000818152600260205260409020600581015460ff16156101625760405162461bcd60e51b815260206004820152600e60248201526d105b1c9958591e4818db1bdcd95960921b60448201526064015b60405180910390fd5b60005460408051632bdd2f0560e21b815290516001600160a01b03909216916391d1485491839163af74bc14916004808201926020929091908290030181865afa1580156101b4573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906101d89190610c7e565b6040516001600160e01b031960e084901b1681526004810191909152336024820152604401602060405180830381865afa15801561021a573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061023e9190610c97565b8061032057506000546040805163a217fddf60e01b815290516001600160a01b03909216916391d1485491839163a217fddf916004808201926020929091908290030181865afa158015610296573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906102ba9190610c7e565b6040516001600160e01b031960e084901b1681526004810191909152336024820152604401602060405180830381865afa1580156102fc573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906103209190610c97565b61033c5760405162461bcd60e51b815260040161015990610cc0565b60058101805460ff19166001179055604051339083907f2ad0a22b93512c1ad0ec7824ed7945bc92e436a68404f6913fbc45d0d53e78d590600090a35050565b600080546040805163fc8045b160e01b815290516001600160a01b03909216916391d1485491839163fc8045b1916004808201926020929091908290030181865afa1580156103cf573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906103f39190610c7e565b6040516001600160e01b031960e084901b1681526004810191909152336024820152604401602060405180830381865afa158015610435573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906104599190610c97565b8061053b57506000546040805163a217fddf60e01b815290516001600160a01b03909216916391d1485491839163a217fddf916004808201926020929091908290030181865afa1580156104b1573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906104d59190610c7e565b6040516001600160e01b031960e084901b1681526004810191909152336024820152604401602060405180830381865afa158015610517573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061053b9190610c97565b6105575760405162461bcd60e51b815260040161015990610cc0565b60016000815461056690610ce8565b91829055506040805160c081018252828152602080820188815282840188815267ffffffffffffffff888116606086019081528651808601885260008082526080880191825260a088018190528981526002968790529790972086518155935160018501559151938301939093555160038201805467ffffffffffffffff1916919093161790915591519293509160048201906106039082610db0565b5060a091909101516005909101805460ff19169115159190911790556040805167ffffffffffffffff84168152602081018290526000918101919091528390859083907f7f539b8d39e96156375140ee256d5d9149227ff892a5a9921f208095df4af1bb9060600160405180910390a49392505050565b6106bf6040518060c00160405280600081526020016000815260200160008152602001600067ffffffffffffffff168152602001606081526020016000151581525090565b600082815260026020818152604092839020835160c081018552815481526001820154928101929092529182015492810192909252600381015467ffffffffffffffff16606083015260048101805460808401919061071d90610d25565b80601f016020809104026020016040519081016040528092919081815260200182805461074990610d25565b80156107965780601f1061076b57610100808354040283529160200191610796565b820191906000526020600020905b81548152906001019060200180831161077957829003601f168201915b50505091835250506005919091015460ff16151560209091015292915050565b600080546040805163fc8045b160e01b815290516001600160a01b03909216916391d1485491839163fc8045b1916004808201926020929091908290030181865afa158015610809573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061082d9190610c7e565b6040516001600160e01b031960e084901b1681526004810191909152336024820152604401602060405180830381865afa15801561086f573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906108939190610c97565b8061097557506000546040805163a217fddf60e01b815290516001600160a01b03909216916391d1485491839163a217fddf916004808201926020929091908290030181865afa1580156108eb573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061090f9190610c7e565b6040516001600160e01b031960e084901b1681526004810191909152336024820152604401602060405180830381865afa158015610951573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906109759190610c97565b6109915760405162461bcd60e51b815260040161015990610cc0565b6001600081546109a090610ce8565b91905081905590506040518060c001604052808281526020018781526020018681526020018567ffffffffffffffff16815260200184848080601f016020809104026020016040519081016040528093929190818152602001838380828437600092018290525093855250505060209182018190528381526002808352604091829020845181559284015160018401559083015190820155606082015160038201805467ffffffffffffffff191667ffffffffffffffff90921691909117905560808201516004820190610a749082610db0565b5060a08201518160050160006101000a81548160ff0219169083151502179055509050508486827f7f539b8d39e96156375140ee256d5d9149227ff892a5a9921f208095df4af1bb878787604051610ace93929190610e70565b60405180910390a495945050505050565b600060208284031215610af157600080fd5b5035919050565b803567ffffffffffffffff81168114610b1057600080fd5b919050565b600080600060608486031215610b2a57600080fd5b8335925060208401359150610b4160408501610af8565b90509250925092565b6000602080835283516020840152602084015160408401526040840151606084015267ffffffffffffffff6060850151166080840152608084015160c060a085015280518060e086015260005b81811015610bb45782810184015186820161010001528301610b97565b506101009250600083828701015260a08601519150610bd760c086018315159052565b601f01601f191693909301019392505050565b600080600080600060808688031215610c0257600080fd5b8535945060208601359350610c1960408701610af8565b9250606086013567ffffffffffffffff80821115610c3657600080fd5b818801915088601f830112610c4a57600080fd5b813581811115610c5957600080fd5b896020828501011115610c6b57600080fd5b9699959850939650602001949392505050565b600060208284031215610c9057600080fd5b5051919050565b600060208284031215610ca957600080fd5b81518015158114610cb957600080fd5b9392505050565b6020808252600e908201526d139bdd08185d5d1a1bdc9a5e995960921b604082015260600190565b600060018201610d0857634e487b7160e01b600052601160045260246000fd5b5060010190565b634e487b7160e01b600052604160045260246000fd5b600181811c90821680610d3957607f821691505b602082108103610d5957634e487b7160e01b600052602260045260246000fd5b50919050565b601f821115610dab576000816000526020600020601f850160051c81016020861015610d885750805b601f850160051c820191505b81811015610da757828155600101610d94565b5050505b505050565b815167ffffffffffffffff811115610dca57610dca610d0f565b610dde81610dd88454610d25565b84610d5f565b602080601f831160018114610e135760008415610dfb5750858301515b600019600386901b1c1916600185901b178555610da7565b600085815260208120601f198616915b82811015610e4257888601518255948401946001909101908401610e23565b5085821015610e605787850151600019600388901b60f8161c191681555b5050505050600190811b01905550565b67ffffffffffffffff8416815260406020820152816040820152818360608301376000818301606090810191909152601f909201601f191601019291505056fea26469706673582212200bcdd06fc4d19337aeae28d8bfcc45e43eca3a19d490c635229d782023dfd00464736f6c63430008180033";

type FFGameConstructorParams =
  | [signer?: Signer]
  | ConstructorParameters<typeof ContractFactory>;

const isSuperArgs = (
  xs: FFGameConstructorParams
): xs is ConstructorParameters<typeof ContractFactory> => xs.length > 1;

export class FFGame__factory extends ContractFactory {
  constructor(...args: FFGameConstructorParams) {
    if (isSuperArgs(args)) {
      super(...args);
    } else {
      super(_abi, _bytecode, args[0]);
    }
  }

  override getDeployTransaction(
    rolesAddress: AddressLike,
    overrides?: NonPayableOverrides & { from?: string }
  ): Promise<ContractDeployTransaction> {
    return super.getDeployTransaction(rolesAddress, overrides || {});
  }
  override deploy(
    rolesAddress: AddressLike,
    overrides?: NonPayableOverrides & { from?: string }
  ) {
    return super.deploy(rolesAddress, overrides || {}) as Promise<
      FFGame & {
        deploymentTransaction(): ContractTransactionResponse;
      }
    >;
  }
  override connect(runner: ContractRunner | null): FFGame__factory {
    return super.connect(runner) as FFGame__factory;
  }

  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): FFGameInterface {
    return new Interface(_abi) as FFGameInterface;
  }
  static connect(address: string, runner?: ContractRunner | null): FFGame {
    return new Contract(address, _abi, runner) as unknown as FFGame;
  }
}
