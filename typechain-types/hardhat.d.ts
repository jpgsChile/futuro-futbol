/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */

import { ethers } from "ethers";
import {
  DeployContractOptions,
  FactoryOptions,
  HardhatEthersHelpers as HardhatEthersHelpersBase,
} from "@nomicfoundation/hardhat-ethers/types";

import * as Contracts from ".";

declare module "hardhat/types/runtime" {
  interface HardhatEthersHelpers extends HardhatEthersHelpersBase {
    getContractFactory(
      name: "AccessControl",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.AccessControl__factory>;
    getContractFactory(
      name: "IAccessControl",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.IAccessControl__factory>;
    getContractFactory(
      name: "ERC165",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.ERC165__factory>;
    getContractFactory(
      name: "IERC165",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.IERC165__factory>;
    getContractFactory(
      name: "FFAttest",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.FFAttest__factory>;
    getContractFactory(
      name: "FFClub",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.FFClub__factory>;
    getContractFactory(
      name: "FFEvent",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.FFEvent__factory>;
    getContractFactory(
      name: "FFGame",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.FFGame__factory>;
    getContractFactory(
      name: "FFLeague",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.FFLeague__factory>;
    getContractFactory(
      name: "FFLineup",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.FFLineup__factory>;
    getContractFactory(
      name: "FFPlayer",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.FFPlayer__factory>;
    getContractFactory(
      name: "FFRoles",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.FFRoles__factory>;
    getContractFactory(
      name: "FFViews",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.FFViews__factory>;
    getContractFactory(
      name: "IFFClub",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.IFFClub__factory>;
    getContractFactory(
      name: "IFFEvent",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.IFFEvent__factory>;
    getContractFactory(
      name: "IFFGame",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.IFFGame__factory>;
    getContractFactory(
      name: "IFFLeague",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.IFFLeague__factory>;
    getContractFactory(
      name: "IFFLineup",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.IFFLineup__factory>;
    getContractFactory(
      name: "IFFPlayer",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.IFFPlayer__factory>;

    getContractAt(
      name: "AccessControl",
      address: string | ethers.Addressable,
      signer?: ethers.Signer
    ): Promise<Contracts.AccessControl>;
    getContractAt(
      name: "IAccessControl",
      address: string | ethers.Addressable,
      signer?: ethers.Signer
    ): Promise<Contracts.IAccessControl>;
    getContractAt(
      name: "ERC165",
      address: string | ethers.Addressable,
      signer?: ethers.Signer
    ): Promise<Contracts.ERC165>;
    getContractAt(
      name: "IERC165",
      address: string | ethers.Addressable,
      signer?: ethers.Signer
    ): Promise<Contracts.IERC165>;
    getContractAt(
      name: "FFAttest",
      address: string | ethers.Addressable,
      signer?: ethers.Signer
    ): Promise<Contracts.FFAttest>;
    getContractAt(
      name: "FFClub",
      address: string | ethers.Addressable,
      signer?: ethers.Signer
    ): Promise<Contracts.FFClub>;
    getContractAt(
      name: "FFEvent",
      address: string | ethers.Addressable,
      signer?: ethers.Signer
    ): Promise<Contracts.FFEvent>;
    getContractAt(
      name: "FFGame",
      address: string | ethers.Addressable,
      signer?: ethers.Signer
    ): Promise<Contracts.FFGame>;
    getContractAt(
      name: "FFLeague",
      address: string | ethers.Addressable,
      signer?: ethers.Signer
    ): Promise<Contracts.FFLeague>;
    getContractAt(
      name: "FFLineup",
      address: string | ethers.Addressable,
      signer?: ethers.Signer
    ): Promise<Contracts.FFLineup>;
    getContractAt(
      name: "FFPlayer",
      address: string | ethers.Addressable,
      signer?: ethers.Signer
    ): Promise<Contracts.FFPlayer>;
    getContractAt(
      name: "FFRoles",
      address: string | ethers.Addressable,
      signer?: ethers.Signer
    ): Promise<Contracts.FFRoles>;
    getContractAt(
      name: "FFViews",
      address: string | ethers.Addressable,
      signer?: ethers.Signer
    ): Promise<Contracts.FFViews>;
    getContractAt(
      name: "IFFClub",
      address: string | ethers.Addressable,
      signer?: ethers.Signer
    ): Promise<Contracts.IFFClub>;
    getContractAt(
      name: "IFFEvent",
      address: string | ethers.Addressable,
      signer?: ethers.Signer
    ): Promise<Contracts.IFFEvent>;
    getContractAt(
      name: "IFFGame",
      address: string | ethers.Addressable,
      signer?: ethers.Signer
    ): Promise<Contracts.IFFGame>;
    getContractAt(
      name: "IFFLeague",
      address: string | ethers.Addressable,
      signer?: ethers.Signer
    ): Promise<Contracts.IFFLeague>;
    getContractAt(
      name: "IFFLineup",
      address: string | ethers.Addressable,
      signer?: ethers.Signer
    ): Promise<Contracts.IFFLineup>;
    getContractAt(
      name: "IFFPlayer",
      address: string | ethers.Addressable,
      signer?: ethers.Signer
    ): Promise<Contracts.IFFPlayer>;

    deployContract(
      name: "AccessControl",
      signerOrOptions?: ethers.Signer | DeployContractOptions
    ): Promise<Contracts.AccessControl>;
    deployContract(
      name: "IAccessControl",
      signerOrOptions?: ethers.Signer | DeployContractOptions
    ): Promise<Contracts.IAccessControl>;
    deployContract(
      name: "ERC165",
      signerOrOptions?: ethers.Signer | DeployContractOptions
    ): Promise<Contracts.ERC165>;
    deployContract(
      name: "IERC165",
      signerOrOptions?: ethers.Signer | DeployContractOptions
    ): Promise<Contracts.IERC165>;
    deployContract(
      name: "FFAttest",
      signerOrOptions?: ethers.Signer | DeployContractOptions
    ): Promise<Contracts.FFAttest>;
    deployContract(
      name: "FFClub",
      signerOrOptions?: ethers.Signer | DeployContractOptions
    ): Promise<Contracts.FFClub>;
    deployContract(
      name: "FFEvent",
      signerOrOptions?: ethers.Signer | DeployContractOptions
    ): Promise<Contracts.FFEvent>;
    deployContract(
      name: "FFGame",
      signerOrOptions?: ethers.Signer | DeployContractOptions
    ): Promise<Contracts.FFGame>;
    deployContract(
      name: "FFLeague",
      signerOrOptions?: ethers.Signer | DeployContractOptions
    ): Promise<Contracts.FFLeague>;
    deployContract(
      name: "FFLineup",
      signerOrOptions?: ethers.Signer | DeployContractOptions
    ): Promise<Contracts.FFLineup>;
    deployContract(
      name: "FFPlayer",
      signerOrOptions?: ethers.Signer | DeployContractOptions
    ): Promise<Contracts.FFPlayer>;
    deployContract(
      name: "FFRoles",
      signerOrOptions?: ethers.Signer | DeployContractOptions
    ): Promise<Contracts.FFRoles>;
    deployContract(
      name: "FFViews",
      signerOrOptions?: ethers.Signer | DeployContractOptions
    ): Promise<Contracts.FFViews>;
    deployContract(
      name: "IFFClub",
      signerOrOptions?: ethers.Signer | DeployContractOptions
    ): Promise<Contracts.IFFClub>;
    deployContract(
      name: "IFFEvent",
      signerOrOptions?: ethers.Signer | DeployContractOptions
    ): Promise<Contracts.IFFEvent>;
    deployContract(
      name: "IFFGame",
      signerOrOptions?: ethers.Signer | DeployContractOptions
    ): Promise<Contracts.IFFGame>;
    deployContract(
      name: "IFFLeague",
      signerOrOptions?: ethers.Signer | DeployContractOptions
    ): Promise<Contracts.IFFLeague>;
    deployContract(
      name: "IFFLineup",
      signerOrOptions?: ethers.Signer | DeployContractOptions
    ): Promise<Contracts.IFFLineup>;
    deployContract(
      name: "IFFPlayer",
      signerOrOptions?: ethers.Signer | DeployContractOptions
    ): Promise<Contracts.IFFPlayer>;

    deployContract(
      name: "AccessControl",
      args: any[],
      signerOrOptions?: ethers.Signer | DeployContractOptions
    ): Promise<Contracts.AccessControl>;
    deployContract(
      name: "IAccessControl",
      args: any[],
      signerOrOptions?: ethers.Signer | DeployContractOptions
    ): Promise<Contracts.IAccessControl>;
    deployContract(
      name: "ERC165",
      args: any[],
      signerOrOptions?: ethers.Signer | DeployContractOptions
    ): Promise<Contracts.ERC165>;
    deployContract(
      name: "IERC165",
      args: any[],
      signerOrOptions?: ethers.Signer | DeployContractOptions
    ): Promise<Contracts.IERC165>;
    deployContract(
      name: "FFAttest",
      args: any[],
      signerOrOptions?: ethers.Signer | DeployContractOptions
    ): Promise<Contracts.FFAttest>;
    deployContract(
      name: "FFClub",
      args: any[],
      signerOrOptions?: ethers.Signer | DeployContractOptions
    ): Promise<Contracts.FFClub>;
    deployContract(
      name: "FFEvent",
      args: any[],
      signerOrOptions?: ethers.Signer | DeployContractOptions
    ): Promise<Contracts.FFEvent>;
    deployContract(
      name: "FFGame",
      args: any[],
      signerOrOptions?: ethers.Signer | DeployContractOptions
    ): Promise<Contracts.FFGame>;
    deployContract(
      name: "FFLeague",
      args: any[],
      signerOrOptions?: ethers.Signer | DeployContractOptions
    ): Promise<Contracts.FFLeague>;
    deployContract(
      name: "FFLineup",
      args: any[],
      signerOrOptions?: ethers.Signer | DeployContractOptions
    ): Promise<Contracts.FFLineup>;
    deployContract(
      name: "FFPlayer",
      args: any[],
      signerOrOptions?: ethers.Signer | DeployContractOptions
    ): Promise<Contracts.FFPlayer>;
    deployContract(
      name: "FFRoles",
      args: any[],
      signerOrOptions?: ethers.Signer | DeployContractOptions
    ): Promise<Contracts.FFRoles>;
    deployContract(
      name: "FFViews",
      args: any[],
      signerOrOptions?: ethers.Signer | DeployContractOptions
    ): Promise<Contracts.FFViews>;
    deployContract(
      name: "IFFClub",
      args: any[],
      signerOrOptions?: ethers.Signer | DeployContractOptions
    ): Promise<Contracts.IFFClub>;
    deployContract(
      name: "IFFEvent",
      args: any[],
      signerOrOptions?: ethers.Signer | DeployContractOptions
    ): Promise<Contracts.IFFEvent>;
    deployContract(
      name: "IFFGame",
      args: any[],
      signerOrOptions?: ethers.Signer | DeployContractOptions
    ): Promise<Contracts.IFFGame>;
    deployContract(
      name: "IFFLeague",
      args: any[],
      signerOrOptions?: ethers.Signer | DeployContractOptions
    ): Promise<Contracts.IFFLeague>;
    deployContract(
      name: "IFFLineup",
      args: any[],
      signerOrOptions?: ethers.Signer | DeployContractOptions
    ): Promise<Contracts.IFFLineup>;
    deployContract(
      name: "IFFPlayer",
      args: any[],
      signerOrOptions?: ethers.Signer | DeployContractOptions
    ): Promise<Contracts.IFFPlayer>;

    // default types
    getContractFactory(
      name: string,
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<ethers.ContractFactory>;
    getContractFactory(
      abi: any[],
      bytecode: ethers.BytesLike,
      signer?: ethers.Signer
    ): Promise<ethers.ContractFactory>;
    getContractAt(
      nameOrAbi: string | any[],
      address: string | ethers.Addressable,
      signer?: ethers.Signer
    ): Promise<ethers.Contract>;
    deployContract(
      name: string,
      signerOrOptions?: ethers.Signer | DeployContractOptions
    ): Promise<ethers.Contract>;
    deployContract(
      name: string,
      args: any[],
      signerOrOptions?: ethers.Signer | DeployContractOptions
    ): Promise<ethers.Contract>;
  }
}
